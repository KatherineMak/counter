{"version":3,"sources":["counter.js","reducer.js","actions.js","index.js"],"names":["Counter","counter","inc","dec","rnd","className","onClick","reducer","state","action","type","payload","store","createStore","dispatch","bindActionCreators","actions","update","ReactDom","render","getState","value","Math","floor","random","document","getElementById","subscribe"],"mappings":"yRAmBeA,EAjBC,SAAC,GAA8B,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,IAAKC,EAAc,EAAdA,IAAKC,EAAS,EAATA,IACjC,OACI,yBAAKC,UAAU,aACX,4BAAKJ,GACL,4BACIK,QAASH,EACTE,UAAU,6BAFd,OAGA,4BACIC,QAASJ,EACTG,UAAU,6BAFd,OAGA,4BACIC,QAASF,EACTC,UAAU,6BAFd,SCCGE,EAbC,WAAwB,IAAvBC,EAAsB,uDAAd,EAAGC,EAAW,uCACnC,OAAOA,EAAOC,MACV,IAAK,MACD,OAAOF,EAAQ,EACnB,IAAK,MACD,OAAOA,EAAQC,EAAOE,QAC1B,IAAK,MACD,OAAOH,EAAQ,EACnB,QACI,OAAOA,ICTNN,EAAM,iBAAO,CAAEQ,KAAM,QACrBP,EAAM,iBAAO,CAAEO,KAAM,QACrBN,EAAM,SAACO,GAAD,MAAc,CAAED,KAAM,MAAOC,YCO1CC,EAAQC,YAAYN,GAClBO,EAAaF,EAAbE,S,EAEkBC,YAAmBC,EAASF,GAA9CZ,E,EAAAA,IAAKC,E,EAAAA,IAAKC,E,EAAAA,IAEZa,EAAS,WACXC,IAASC,OACL,kBAAC,EAAD,CACIlB,QAAWW,EAAMQ,WACjBlB,IAAKA,EACLC,IAAKA,EACLC,IAAK,WACD,IAAMiB,EAAQC,KAAKC,MAAoB,GAAdD,KAAKE,UAC9BpB,EAAIiB,MAGZI,SAASC,eAAe,UAEhCT,IACAL,EAAMe,UAAUV,I","file":"static/js/main.5e71f731.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Counter = ({counter, inc, dec, rnd}) => {\r\n    return(\r\n        <div className=\"jumbotron\">\r\n            <h2>{counter}</h2>\r\n            <button\r\n                onClick={dec}\r\n                className=\"btn btn-primary btn-large\">DEC</button>\r\n            <button\r\n                onClick={inc}\r\n                className=\"btn btn-primary btn-large\">INC</button>\r\n            <button\r\n                onClick={rnd}\r\n                className=\"btn btn-primary btn-large\">RND</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Counter;","const reducer = (state = 0, action) => {\r\n    switch(action.type) {\r\n        case 'INC':\r\n            return state + 1;\r\n        case 'RND':\r\n            return state + action.payload;\r\n        case 'DEC':\r\n            return state - 1;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","export const inc = () => ({ type: 'INC' });\r\nexport const dec = () => ({ type: 'DEC' });\r\nexport const rnd = (payload) => ({ type: 'RND', payload });","import React from 'react';\nimport ReactDom from 'react-dom';\nimport { createStore, bindActionCreators } from 'redux';\n\nimport Counter from './counter';\n\nimport reducer from './reducer';\nimport * as actions from './actions';\n\nconst store = createStore(reducer);\nconst { dispatch } = store;\n\nconst { inc, dec, rnd } = bindActionCreators(actions, dispatch);\n\nconst update = () => {\n    ReactDom.render(\n        <Counter\n            counter = {store.getState()}\n            inc={inc}\n            dec={dec}\n            rnd={() => {\n                const value = Math.floor(Math.random()*10);\n                rnd(value);\n            }}\n        />,\n        document.getElementById('root'));\n};\nupdate();\nstore.subscribe(update);\n"],"sourceRoot":""}